this.Centers = new Mongo.Collection('centers');

Schemas.Centers = new SimpleSchema({
  name: {
    type: String,
    label: '中心名稱',
    max: 255
  },
  address: {
    type: String,
    label: '中心地址',
    max: 255
  },
  contactNumber: {
    type: String,
    label: '聯絡電話',
    max: 8
  },
  contactEmail: {
    type: String,
    label: '聯絡電郵',
    optional: true,
    max: 30
  },
  district: {
    type: String,
    label: '地區',
    allowedValues: function () {
      return Districts.find().map((district) => {
        return district._id;
      });
    },
    autoform: {
      options: function () {

        Meteor.subscribe('districts');

        return Districts.find().map((district) => {
          return {
            label: district.description,
            value: district._id
          };
        });

      }
    }
  },
  location: {
    type: Object,
    optional: true,
    autoform: {
      type: '地圖',
      afFieldInput: {
        key: 'AIzaSyBA0f2XF7LxvhS-8ZZZtlex40s9fV8pw_0',
        zoom: 8,
        geolocation: true
      }
    }
  },
  'location.lat': {
    type: Number,
    decimal: true
  },
  'location.lng': {
    type: Number,
    decimal: true
  },
  createdAt: {
    type: Date,
    autoValue: function () {
      if (this.isInsert) {
        return new Date();
      }
    }
  },
  updatedAt: {
    type: Date,
    optional: true,
    autoValue: function () {
      if (this.isUpdate) {
        return new Date();
      }
    }
  },
  owner: {
    type: String,
    regEx: SimpleSchema.RegEx.Id,
    autoValue: function () {
      if (this.isInsert) {
        return Meteor.userId();
      }
    },
    autoform: {
      options: function () {
        return _.map(Meteor.users.find().fetch(), function (user) {
          return {
            label: user.emails[0].address,
            value: user._id
          };
        });
      }
    }
  }
});

Centers.attachSchema(Schemas.Centers);

Centers.helpers({
  author: function () {
    var ref, ref1, ref2, user;
    user = Meteor.users.findOne(this.owner);
    if (((user != null ? (ref = user.profile) != null ? ref.firstName : void 0 : void 0) != null) && (user != null ? (ref1 = user.profile) != null ? ref1.lastName : void 0 : void 0)) {
      return user.profile.firstName + ' ' + user.profile.lastName;
    } else {
      return user != null ? (ref2 = user.emails) != null ? ref2[0].address : void 0 : void 0;
    }
  }
});

// ---
// generated by coffee-script 1.9.2